---
import type { GetStaticPathsResult } from "astro";
import { Icon } from "astro-icon/components";

import ImageOverlay from "@/components/image-overlay.astro";
import Section from "@/components/section.astro";
import { locales } from "@/config/i18n.config";
import Layout from "@/layouts/page.layout.astro";
import { createCollectionResource } from "@/lib/content/create-resource";
import { createI18n } from "@/lib/i18n/create-i18n";

export async function getStaticPaths() {
	return locales.map((locale) => {
		return { params: { locale } };
	}) satisfies GetStaticPathsResult;
}

const { locale } = Astro.params;

const { t } = await createI18n(locale);

const page = await createCollectionResource("pages", locale).read("links");
const links = await createCollectionResource("links", locale).all();

const { content, image, title } = page.data;

const { default: Content } = await page.compile(content);
---

<Layout locale={locale} title={title}>
	<main class="mb-2xl">
		<section class:list={[image?.src && "border-b border-neutral-200"]} class="relative">
			{
				image?.src ? (
					<figure>
						<img
							alt=""
							class="absolute inset-0 size-full object-cover"
							loading="eager"
							src={image.src}
						/>
						{image.caption ? (
							<figcaption class="absolute bottom-1.5 right-2 z-10 text-xs font-medium text-neutral-300">
								{image.caption}
							</figcaption>
						) : null}
						<ImageOverlay />
					</figure>
				) : null
			}
			<div
				class:list={[image?.src ? "text-white" : "border-b border-neutral-200"]}
				class="container relative py-2xl"
			>
				<div class="grid gap-y-sm">
					<h1 class="text-display lowercase">{title}.</h1>
					{
						content ? (
							<div class="font-semibold">
								<Content />
							</div>
						) : null
					}
				</div>
			</div>
		</section>

		<Section>
			<div class="container py-xl">
				{
					links.length > 0 ? (
						<ul class="grid content-start gap-y-lg" role="list">
							{links.map(async (link) => {
								const { data } = link;

								const { content, href, name } = data;

								const { default: Content } = await link.compile(content);

								return (
									<li class="border-b pb-lg">
										<article class="relative grid content-start gap-y-xs">
											<h3 class="text-2xl font-strong text-text-strong">{name}</h3>
											<div class="prose my-xs">
												<Content />
											</div>
											<a
												class="group inline-flex items-center gap-x-2 font-medium transition hover:text-text-brand"
												href={href}
											>
												<Icon
													aria-hidden="true"
													class="mt-px size-4 shrink-0 text-text-weak transition group-hover:text-stroke-brand-strong"
													name="lucide:square-arrow-out-up-right"
												/>
												{href}
											</a>
										</article>
									</li>
								);
							})}
						</ul>
					) : (
						<p class="flex justify-center py-xl text-center text-sm text-text-weak">
							{t("common.coming-soon")}
						</p>
					)
				}
			</div>
		</Section>
	</main>
</Layout>
