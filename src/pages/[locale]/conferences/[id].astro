---
import type { GetStaticPathsResult } from "astro";

import ImageOverlay from "@/components/image-overlay.astro";
import Section from "@/components/section.astro";
import { locales } from "@/config/i18n.config";
import Layout from "@/layouts/page.layout.astro";
import { createCollectionResource } from "@/lib/content/create-resource";
import { getFormatter } from "@/lib/formatter";
import { createI18n } from "@/lib/i18n/create-i18n";

export const getStaticPaths = async function getStaticPaths() {
	return (
		await Promise.all(
			locales.map(async (locale) => {
				const ids = await createCollectionResource("conferences", locale).list();

				return ids.map((id) => {
					return { params: { id, locale } };
				});
			}),
		)
	).flat() satisfies GetStaticPathsResult;
};

const { id, locale } = Astro.params;

const { t } = await createI18n(locale);

const conference = await createCollectionResource("conferences", locale).read(id);

const { content, date, endDate, hosts, image, location, title } = conference.data;

const { default: Content } = await conference.compile(content);

const formatter = getFormatter(locale);
---

<Layout locale={locale} title={title}>
	<main class="mb-2xl">
		<section class="relative">
			{
				image ? (
					<>
						<img
							alt=""
							class="absolute inset-0 size-full object-cover"
							loading="eager"
							src={image}
						/>
						<ImageOverlay />
					</>
				) : null
			}
			<div class:list={[image && "text-white"]} class="container relative border-b py-2xl">
				<div class="grid gap-y-sm">
					<h1 class="text-display lowercase">{title}.</h1>
					<dl class="ml-12 flex max-w-prose flex-wrap gap-x-xl gap-y-sm font-semibold">
						<div class="leading-snug">
							<dt class="text-uppercase uppercase">{t("common.date")}</dt>
							<dd>
								<time datetime={date}>
									{
										endDate
											? formatter.date.formatRange(new Date(date), new Date(endDate))
											: formatter.date.format(new Date(date))
									}
								</time>
							</dd>
						</div>
						<div class="leading-snug">
							<dt class="text-uppercase uppercase">{t("common.location")}</dt>
							<dd>{location}</dd>
						</div>
						<div class="leading-snug">
							<dt class="text-uppercase uppercase">{t("common.hosts")}</dt>
							<dd>
								{formatter.list.format(hosts.map((host) => host.name))}
							</dd>
						</div>
					</dl>
				</div>
			</div>
		</section>

		<Section>
			<div class="container prose py-xl">
				{
					content ? (
						<Content />
					) : (
						<p class="flex justify-center py-xl text-center text-sm text-text-weak">
							{t("common.coming-soon")}
						</p>
					)
				}
			</div>
		</Section>
	</main>
</Layout>
